/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {

        int la=0,lb=0;
        ListNode *tempA=headA;
        ListNode *tempB=headB;
        while(tempA!=NULL)
        {
            tempA=tempA->next;
            la++;
            
        }

        while(tempB!=NULL)
        {
            lb++;
            tempB=tempB->next;
        }

        int diff=abs(la-lb);

        if(la>lb)
        {
            while(diff--)
            headA=headA->next;
        }
        else
        {
            while(diff--)
            headB=headB->next;
        }

        while(headA!=nullptr && headB!=nullptr)
        {
           if(headA==headB) return headA;
           headA=headA->next;
           headB=headB->next;
        }

       
        return NULL;
        
    }
};