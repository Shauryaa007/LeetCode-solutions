/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    
    ListNode* reverseKGroup(ListNode* head, int k) {
        int count=0;
        ListNode *temp=head;

        while(temp!=nullptr)
        {
            count++;
            temp=temp->next;
        }

        if(count<k) return head;
        else
        { 
            if(head==nullptr)return head;
            if(head->next==nullptr)return head;
            ListNode *pre=head;
            ListNode *curr=head->next;
            int l=k-1;
            while(l--)
            {
                ListNode *post=curr->next;
                curr->next=pre;
                pre=curr;
                curr=post;

            }
            ListNode *tail=head;
            tail->next=reverseKGroup(curr, k);
            return pre;
          
        }
    }
};